package ${packageName}.web.controller;

import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.session.Session;
import org.apache.tomcat.util.http.fileupload.IOUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.code.kaptcha.Constants;
import com.google.code.kaptcha.Producer;
import com.polyman.common.base.bean.BaseBusinessController;
import com.polyman.common.base.bean.BizException;
import com.polyman.common.base.utils.ResultDto;




/**
 * 管理相关
 */
@Controller
@RequestMapping("/manager")
public class ManagerController extends BaseBusinessController {

	Logger logger = LoggerFactory.getLogger(ManagerController.class);
	

	@Autowired
	private Producer producer;

    /**
     * 用户密码登录
     */

    @ResponseBody
    @RequestMapping(value = "/login", method = RequestMethod.POST)
    public ResultDto login() throws BizException {
        return success();
    }
    
    
    /**
     * 退出
     */

    @RequestMapping(value = "/logout", method = RequestMethod.GET)
    public String logout() {
        return "redirect:/apos.html";
    }

	/**
	 * 验证码
	 */
	@RequestMapping("/captcha")
	public void captcha(HttpServletResponse response) throws ServletException, IOException {
		response.setHeader("Cache-Control", "no-store, no-cache");
		response.setContentType("image/jpeg");
		// 生成文字验证码
		String text = producer.createText();
		// 生成图片验证码
		BufferedImage image = producer.createImage(text);
		Session session=SecurityUtils.getSubject().getSession();
		// 保存到shiro session
		session.setAttribute(Constants.KAPTCHA_SESSION_KEY, text);
		ServletOutputStream out = response.getOutputStream();
		ImageIO.setUseCache(false);
		ImageIO.write(image, "jpg", out);
		IOUtils.closeQuietly(out);
	}

}
